{"ast":null,"code":"export const inputChecks = (type, name) => {\n  if (type === \"text\") {\n    return {\n      required: \"*Please fill this field\"\n    };\n  } else if (type === \"email\") {\n    return {\n      required: \"*Please fill this field\",\n      pattern: /^[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*@[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*$/\n    };\n  } else if (type === \"number\") {\n    switch (name) {\n      case \"mobile\":\n        return {\n          required: \"*Please fill this field\",\n          minLength: {\n            value: 10,\n            message: \"*Invalid mobile number \"\n          },\n          maxLength: {\n            value: 12,\n            message: \"*Invalid mobile number\"\n          }\n        };\n      case \"postalCode\":\n        return {\n          required: \"*Please fill this field\",\n          minLength: {\n            value: 6,\n            message: \"*Invalid postal code\"\n          },\n          maxLength: {\n            value: 6,\n            message: \"*Invalid postal code\"\n          }\n        };\n      default:\n        return {\n          required: \"*Please fill this field\"\n        };\n    }\n  }\n};","map":{"version":3,"names":["inputChecks","type","name","required","pattern","minLength","value","message","maxLength"],"sources":["C:/Users/LENOVO/Desktop/designing/Almabetter/resume_builder-main/resume_builder-main/src/Utils/inputChecks.js"],"sourcesContent":["export const inputChecks = (type, name) => {\n  if (type === \"text\") {\n    return { required: \"*Please fill this field\" };\n  } else if (type === \"email\") {\n    return {\n      required: \"*Please fill this field\",\n      pattern:\n        /^[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*@[a-zA-Z0-9]+(?:\\.[a-zA-Z0-9]+)*$/,\n    };\n  } else if (type === \"number\") {\n    switch (name) {\n      case \"mobile\":\n        return {\n          required: \"*Please fill this field\",\n          minLength: { value: 10, message: \"*Invalid mobile number \" },\n          maxLength: { value: 12, message: \"*Invalid mobile number\" },\n        };\n      case \"postalCode\":\n        return {\n          required: \"*Please fill this field\",\n          minLength: { value: 6, message: \"*Invalid postal code\" },\n          maxLength: { value: 6, message: \"*Invalid postal code\" },\n        };\n      default:\n        return { required: \"*Please fill this field\" };\n    }\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,IAAI,EAAEC,IAAI,KAAK;EACzC,IAAID,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MAAEE,QAAQ,EAAE;IAA0B,CAAC;EAChD,CAAC,MAAM,IAAIF,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MACLE,QAAQ,EAAE,yBAAyB;MACnCC,OAAO,EACL;IACJ,CAAC;EACH,CAAC,MAAM,IAAIH,IAAI,KAAK,QAAQ,EAAE;IAC5B,QAAQC,IAAI;MACV,KAAK,QAAQ;QACX,OAAO;UACLC,QAAQ,EAAE,yBAAyB;UACnCE,SAAS,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,OAAO,EAAE;UAA0B,CAAC;UAC5DC,SAAS,EAAE;YAAEF,KAAK,EAAE,EAAE;YAAEC,OAAO,EAAE;UAAyB;QAC5D,CAAC;MACH,KAAK,YAAY;QACf,OAAO;UACLJ,QAAQ,EAAE,yBAAyB;UACnCE,SAAS,EAAE;YAAEC,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAuB,CAAC;UACxDC,SAAS,EAAE;YAAEF,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAuB;QACzD,CAAC;MACH;QACE,OAAO;UAAEJ,QAAQ,EAAE;QAA0B,CAAC;IAAC;EAErD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}